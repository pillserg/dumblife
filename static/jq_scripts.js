// Generated by CoffeeScript 1.7.1
(function() {
  var ACTIVE_CLS, SPEED_FACTOR, activate_cell, deactivate_cell, decide_fate, evolve, get_adjanced_cells, get_cell_coords, get_speed, init, is_alive, toggle_cell;

  ACTIVE_CLS = 'active';

  SPEED_FACTOR = 1000;

  window.speed_timeout = null;

  window.iteration = 0;

  get_speed = function() {
    return $('#speed').val();
  };

  toggle_cell = function(e) {
    var $cell;
    $cell = $(this);
    return $cell.toggleClass(ACTIVE_CLS);
  };

  activate_cell = function($cell) {
    return $cell.addClass(ACTIVE_CLS);
  };

  deactivate_cell = function($cell) {
    return $cell.removeClass(ACTIVE_CLS);
  };

  is_alive = function($cell) {
    if ($cell.hasClass(ACTIVE_CLS)) {
      return true;
    } else {
      return false;
    }
  };

  get_cell_coords = function(cell) {
    var x, y, _, _ref;
    _ref = cell.id.split('_'), _ = _ref[0], x = _ref[1], y = _ref[2];
    return [parseInt(x), parseInt(y)];
  };

  get_adjanced_cells = function(cell) {
    var ids, x, y, _ref;
    _ref = get_cell_coords(cell), x = _ref[0], y = _ref[1];
    ids = [];
    lazyProduct([[x + 1, x - 1, x], [y + 1, y - 1, y]], function(x, y) {
      return ids.push("#cell_" + x + "_" + y);
    });
    return $(ids.join(',')).not(cell);
  };

  decide_fate = function(cell) {
    var $cell, a_cell, adjanced_cells, alive_adjanced_cells, _ref;
    $cell = $(cell);
    adjanced_cells = $cell.data('adjanced_cells');
    alive_adjanced_cells = ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = adjanced_cells.length; _i < _len; _i++) {
        a_cell = adjanced_cells[_i];
        if (is_alive($(a_cell))) {
          _results.push(a_cell);
        }
      }
      return _results;
    })()) || [];
    if (!is_alive($cell) && alive_adjanced_cells.length === 3) {
      return true;
    } else if (is_alive($cell) && (2 <= (_ref = alive_adjanced_cells.length) && _ref <= 3)) {
      return true;
    } else {
      return false;
    }
  };

  init = function(world) {
    var cell, _i, _len, _ref, _results;
    _ref = world.find('.cell');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cell = _ref[_i];
      _results.push(($(cell)).data('adjanced_cells', get_adjanced_cells(cell)));
    }
    return _results;
  };

  evolve = function() {
    var $cell, cell, world, _i, _j, _len, _len1, _ref, _ref1;
    console.log("evolving world, iteraition: " + window.iteration);
    world = $('#world');
    _ref = world.find('.cell');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cell = _ref[_i];
      $(cell).data('is_alive_at_next_step', decide_fate(cell));
    }
    _ref1 = world.find('.cell');
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      cell = _ref1[_j];
      $cell = $(cell);
      if ($cell.data('is_alive_at_next_step')) {
        activate_cell($cell);
      } else {
        deactivate_cell($cell);
      }
    }
    window.speed_timeout = setTimeout(evolve, SPEED_FACTOR / get_speed());
    return window.iteration++;
  };

  init($('#world'));

  $('#universe').on('click', '#world .cell', toggle_cell);

  $('#start').click(function() {
    return evolve();
  });

  $('#stop').click(function() {
    return clearTimeout(window.speed_timeout);
  });

}).call(this);
